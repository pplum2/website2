{"version":3,"sources":["webpack:///./src/components/Game.js","webpack:///./src/pages/page-2.js"],"names":["Game","componentDidMount","canvas","document","querySelector","w","height","width","window","innerHeight","cx","getContext","fillRect","unit","maze","row","player","keys","hdlKeydown","e","code","type","y","x","main","bomb","active","clearRect","i","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","drawGrid","length","j","block","fillStyle","movePlayer","onload","addEventListener","render","id","React","Component","SecondPage","title"],"mappings":"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","file":"component---src-pages-page-2-js-c6f4fc88a57ab700501c.js","sourcesContent":["import React from \"react\"\r\n\r\nclass Game extends React.Component {\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  componentDidMount() {\r\n    let canvas = document.querySelector(\"canvas\")\r\n    let w = (canvas.height = canvas.width = window.innerHeight - 400)\r\n    let cx = canvas.getContext(\"2d\")\r\n\r\n    cx.fillRect(0, 0, 10, 10)\r\n    let unit = w / 10\r\n    let maze = \"\"\r\n    let row = \"\"\r\n    let player = {}\r\n    player.x = 3\r\n    player.y = 1\r\n    // debugger;\r\n    let keys = {}\r\n    window.onload = main()\r\n\r\n    document.addEventListener(\"keydown\", hdlKeydown)\r\n    document.addEventListener(\"keyup\", hdlKeydown)\r\n    // KEY MAPPINGS\r\n    function hdlKeydown(e) {\r\n      keys[e.code] = e.type == \"keydown\"\r\n\r\n      if (keys[\"ArrowRight\"] && keys[\"ArrowUp\"]) {\r\n        // right\r\n        if (maze[player.y][player.x + 1] != \"#\" && player.x < 9) {\r\n          player.x += 1\r\n        }\r\n        // up\r\n        if (player.y > 0 && maze[player.y - 1][player.x] != \"#\") {\r\n          player.y -= 1\r\n        }\r\n      } else if (keys[\"ArrowRight\"] && keys[\"ArrowDown\"]) {\r\n        // right\r\n        if (maze[player.y][player.x + 1] != \"#\" && player.x < 9) {\r\n          player.x += 1\r\n        }\r\n        // down\r\n        if (player.y < 9 && maze[player.y + 1][player.x] != \"#\") {\r\n          player.y -= 1\r\n        }\r\n      } else if (keys[\"ArrowLeft\"] && keys[\"ArrowUp\"]) {\r\n        // up\r\n        if (player.y > 0 && maze[player.y - 1][player.x] != \"#\") {\r\n          player.y -= 1\r\n        }\r\n        // left\r\n        if (maze[player.y][player.x - 1] != \"#\" && player.x > 0) {\r\n          player.x -= 1\r\n        }\r\n      } else if (keys[\"ArrowLeft\"] && keys[\"ArrowDown\"]) {\r\n        // down\r\n        if (player.y < 9 && maze[player.y + 1][player.x] != \"#\") {\r\n          player.y -= 1\r\n        }\r\n        // left\r\n        if (maze[player.y][player.x - 1] != \"#\" && player.x > 0) {\r\n          player.x -= 1\r\n        }\r\n      } else if (keys[\"ArrowLeft\"]) {\r\n        if (maze[player.y][player.x - 1] != \"#\" && player.x > 0) {\r\n          player.x -= 1\r\n        }\r\n      } else if (keys[\"ArrowRight\"]) {\r\n        if (maze[player.y][player.x + 1] != \"#\" && player.x < 9) {\r\n          player.x += 1\r\n        }\r\n      } else if (keys[\"ArrowUp\"]) {\r\n        if (player.y > 0 && maze[player.y - 1][player.x] != \"#\") {\r\n          player.y -= 1\r\n        }\r\n      } else if (keys[\"ArrowDown\"]) {\r\n        if (player.y < 9 && maze[player.y + 1][player.x] != \"#\") {\r\n          player.y += 1\r\n        }\r\n      }\r\n      main()\r\n    }\r\n\r\n    function bomb() {\r\n      bomb.x = player.x\r\n      bomb.y = player.y\r\n      bomb.active = true\r\n      main()\r\n    }\r\n\r\n    function checkBomb() {\r\n      if (bomb.active == true) {\r\n        cx.fillStyle = \"red\"\r\n        cx.fillRect(bomb.x * unit, bomb.y * unit, unit, unit)\r\n      }\r\n    }\r\n\r\n    // movePlayer(player);\r\n    function movePlayer(player) {\r\n      cx.fillStyle = \"green\"\r\n      cx.fillRect(player.x * unit, player.y * unit, unit, unit)\r\n    }\r\n\r\n    function move(direction) {\r\n      main()\r\n      switch (direction) {\r\n        case \"ArrowRight\":\r\n          break\r\n\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    function main() {\r\n      cx.clearRect(0, 0, w, w)\r\n      drawGrid()\r\n      maze = Maze()\r\n\r\n      for (let i = 0; i < maze.length; i++) {\r\n        row = maze[i]\r\n        for (let j = 0; j < maze.length; j++) {\r\n          if (row[j] == \"#\") {\r\n            block(j, i)\r\n          } else {\r\n            // console.log(i, y, x);\r\n          }\r\n        }\r\n      }\r\n      movePlayer(player)\r\n      checkBomb()\r\n    }\r\n\r\n    function block(x, y) {\r\n      cx.fillStyle = \"black\"\r\n      cx.fillRect(x * unit, y * unit, unit, unit)\r\n    }\r\n\r\n    function Maze() {\r\n      maze = [\r\n        `# ## # ###`,\r\n        `#    #    `,\r\n        `## # # # #`,\r\n        `#         `,\r\n        `# ## ## ##`,\r\n        `     #     `,\r\n        `# # ## # #`,\r\n        `    #  # #`,\r\n        `# #       `,\r\n        `##### # ##`,\r\n      ]\r\n      return maze\r\n    }\r\n\r\n    function drawGrid() {\r\n      for (let i = 0; i < 10; i++) {\r\n        cx.strokeStyle = \"black\"\r\n        cx.lineWidth = 0.1\r\n        cx.beginPath()\r\n        cx.moveTo(i * unit, 0)\r\n        cx.lineTo(i * unit, w)\r\n        cx.closePath()\r\n        cx.stroke()\r\n      }\r\n      for (let i = 0; i < 10; i++) {\r\n        cx.strokeStyle = \"black\"\r\n        cx.lineWidth = 0.1\r\n        cx.beginPath()\r\n        cx.moveTo(0, i * unit)\r\n        cx.lineTo(w, i * unit)\r\n        cx.closePath()\r\n        cx.stroke()\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"game-canvas\">\r\n        canvas below!!!\r\n        <p></p>\r\n        <canvas></canvas>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Game from \"../components/Game\"\r\n\r\nconst SecondPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Page two\" />\r\n    <Game />\r\n  </Layout>\r\n)\r\n\r\nexport default SecondPage\r\n"],"sourceRoot":""}